// Copyright (c) 2019-2022 The Bitcoin developers
// Distributed under the MIT software license, see the accompanying
// file COPYING or http://www.opensource.org/licenses/mit-license.php.
#pragma once
/**
 * Chain params constants for each tracked chain.
 * @generated by contrib/devtools/chainparams/generate_chainparams_constants.py
 */

#include <primitives/blockhash.h>
#include <uint256.h>

namespace ChainParamsConstants {
    const BlockHash MAINNET_DEFAULT_ASSUME_VALID = BlockHash::fromHex("00000000000000000343317b11f32e01386fbf45c7f0d04766e25519d1fcacab");
    const uint256 MAINNET_MINIMUM_CHAIN_WORK = uint256S("000000000000000000000000000000000000000001a7a3dd88cd8ed6daee0d12");

    const BlockHash TESTNET_DEFAULT_ASSUME_VALID = BlockHash::fromHex("0000000002d3a459710c4af0adf1e7177f22ca542e1f5de2894f147193f5f478");
    const uint256 TESTNET_MINIMUM_CHAIN_WORK = uint256S("00000000000000000000000000000000000000000000009d7cc8932e7d80fbd1");

    const BlockHash TESTNET4_DEFAULT_ASSUME_VALID = BlockHash::fromHex("000000005d82b11157f405d6ea43f87a01d071b6b207b183637194a626ddfffc");
    const uint256 TESTNET4_MINIMUM_CHAIN_WORK = uint256S("00000000000000000000000000000000000000000000000001abe0b92302359d");

    // Scalenet re-organizes above height 10,000 - use block 9,999 hash here.
    const BlockHash SCALENET_DEFAULT_ASSUME_VALID = BlockHash::fromHex("000000007fb3362740efd1435aa414f54171993483799782f83c61bc7bf1b1be");
    const uint256 SCALENET_MINIMUM_CHAIN_WORK = uint256S("00000000000000000000000000000000000000000000000003a54dce8032552f");

    const BlockHash CHIPNET_DEFAULT_ASSUME_VALID = BlockHash::fromHex("0000000015c063ebe6e6c00bb345c50575fa9e703543ce8b722d28f9f6505b94");
    const uint256 CHIPNET_MINIMUM_CHAIN_WORK = uint256S("00000000000000000000000000000000000000000000000001624bc9feca18ab");
} // namespace ChainParamsConstants
